{"version":3,"sources":["module/index.js","index.js"],"names":["eventOptions","supportsPassive","passive","Canvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_resizeHandler","debounce","_updateDimensions","maintainPixelSize","_checkResize","canvas","offsetWidth","offsetHeight","width","height","onResize","_this2","window","addEventListener","MutationObserver","mutationObserver","observe","document","documentElement","attributes","subtree","setTimeout","removeEventListener","disconnect","getContext","contextType","startX","arguments","length","undefined","startY","endX","endY","getImageData","_mount","_unmount","_this3","_this$props","rest","objectWithoutProperties","react_default","a","createElement","assign","ref","c","Component","defaultProps","Demo","draw1","draw2","draw","canvas1","canvas2","context","element","getCanvasElement","centerX","centerY","beginPath","arc","Math","PI","fillStyle","fill","lineWidth","strokeStyle","stroke","className","src_module","id","render","src_Demo","getElementById"],"mappings":"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","file":"static/js/main.2fe73b6c.chunk.js","sourcesContent":["/*eslint no-unused-vars: [\"error\", { \"ignoreRestSiblings\": true }]*/\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"debounce\";\nimport supportsPassive from \"supports-passive\";\n\nconst eventOptions = supportsPassive ? { passive: true } : false;\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this._resizeHandler = debounce(() => this._updateDimensions(), true);\n  }\n\n  _updateDimensions() {\n    if (this.props.maintainPixelSize) {\n      this._checkResize();\n    }\n  }\n\n  _checkResize() {\n    const { canvas, props } = this;\n    const { offsetWidth, offsetHeight, width, height } = canvas;\n\n    if (width !== offsetWidth || height !== offsetHeight) {\n      canvas.width = offsetWidth;\n      canvas.height = offsetHeight;\n\n      if (props.onResize) {\n        props.onResize(offsetWidth, offsetHeight);\n      }\n    }\n  }\n\n  _mount() {\n    const { canvas } = this;\n\n    window.addEventListener(\"resize\", this._resizeHandler, eventOptions);\n    canvas.addEventListener(\"resize\", this._resizeHandler, eventOptions);\n\n    if (window.MutationObserver) {\n      this.mutationObserver = new window.MutationObserver(this._resizeHandler);\n      this.mutationObserver.observe(document.documentElement, {\n        attributes: true,\n        subtree: true\n      });\n    }\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    setTimeout(() => this._checkResize());\n  }\n\n  _unmount() {\n    const { canvas } = this;\n\n    window.removeEventListener(\"resize\", this._resizeHandler);\n    canvas.removeEventListener(\"resize\", this._resizeHandler);\n\n    if (window.MutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n  }\n\n  /** Retrieve the canvas react component. */\n  getCanvasElement() {\n    return this.canvas;\n  }\n\n  /** Get the context of the canvas. */\n  getContext() {\n    return this.canvas.getContext(this.props.contextType);\n  }\n\n  /** Get the image data of the canvas with a give area. */\n  getImageData(\n    startX = 0,\n    startY = 0,\n    endX = this.canvas.width,\n    endY = this.canvas.height\n  ) {\n    return this.getContext().getImageData(startX, startY, endX, endY);\n  }\n\n  componentDidMount() {\n    this._mount();\n  }\n\n  componentWillUnmount() {\n    this._unmount();\n  }\n\n  render() {\n    const { maintainPixelSize, onResize, contextType, ...rest } = this.props;\n    return <canvas ref={c => (this.canvas = c)} {...rest} />;\n  }\n}\n\nCanvas.propTypes = {\n  maintainPixelSize: PropTypes.bool,\n  onResize: PropTypes.func,\n  contextType: PropTypes.string\n};\n\nCanvas.defaultProps = {\n  maintainPixelSize: true,\n  contextType: \"2d\"\n};\n\nexport default Canvas;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n\nimport Canvas from \"./module\";\n\nimport \"./style.css\";\n\nclass Demo extends Component {\n  componentDidMount() {\n    this.draw1();\n    this.draw2();\n  }\n\n  draw1() {\n    this.draw(this.canvas1);\n  }\n\n  draw2() {\n    this.draw(this.canvas2);\n  }\n\n  draw(canvas) {\n    const context = canvas.getContext();\n    const element = canvas.getCanvasElement();\n    const { width, height } = element;\n\n    const radius = 70;\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    context.beginPath();\n    context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n    context.fillStyle = \"#00FF00\";\n    context.fill();\n    context.lineWidth = 5;\n    context.strokeStyle = \"#003300\";\n    context.stroke();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"canvas-wrapper\">\n          <span className=\"title\">Draw once only</span>\n          <Canvas\n            ref={c => (this.canvas1 = c)}\n            id=\"canvas1\"\n            maintainPixelSize={false}\n            onResize={() => this.draw1()}\n          />\n        </div>\n        <div className=\"canvas-wrapper\">\n          <span className=\"title\">Redraw on resize</span>\n          <Canvas\n            ref={c => (this.canvas2 = c)}\n            id=\"canvas2\"\n            onResize={() => this.draw2()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nrender(<Demo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}